r_met <- .get.right(reactionList[reaction])
r_coe <- .coefficients(r_met)
p_met <- .get.left(reactionList[reaction])
p_coe <- .coefficients(p_met)
s[reaction,metabolites(r_met)] <- -1*(r_coe)
s[reaction,metabolites(p_met)] <- p_coe
}
View(s)
s <- matrix(0,nrow = length(reactionList),ncol=length(metabolites(reactionList)),dimnames = list(row=NULL,col=metabolites(reactionList)))
for (reaction in 1:length(reactionList)){
r_met <- .get.right(reactionList[reaction])
r_coe <- .coefficients(r_met)
p_met <- .get.left(reactionList[reaction])
p_coe <- .coefficients(p_met)
s[reaction,metabolites(r_met)] <- -1*(r_coe)
s[reaction,metabolites(p_met)] <- p_coe
}
View(s)
s[128,]
glugln[128]
s <- matrix(0,nrow = length(reactionList),ncol=length(metabolites(reactionList)),dimnames = list(row=NULL,col=sort(metabolites(reactionList))))
for (reaction in 1:length(reactionList)){
r_met <- .get.right(reactionList[reaction])
r_coe <- .coefficients(r_met)
p_met <- .get.left(reactionList[reaction])
p_coe <- .coefficients(p_met)
s[reaction,metabolites(r_met)] <- -1*(r_coe)
s[reaction,metabolites(p_met)] <- p_coe
}
View(s)
s <- matrix(0,nrow = length(reactionList),ncol=length(metabolites(reactionList)),dimnames = list(row=NULL,col=metabolites(reactionList)))
for (reaction in 1:length(reactionList)){
r_met <- .get.right(reactionList[reaction])
r_coe <- .coefficients(r_met)
p_met <- .get.left(reactionList[reaction])
p_coe <- .coefficients(p_met)
s[reaction,metabolites(r_met)] <- -1*(r_coe)
s[reaction,metabolites(p_met)] <- p_coe
}
View(s)
reactionList <- c("A + B => C","B => C")
s <- matrix(0,nrow = length(reactionList),ncol=length(metabolites(reactionList)),dimnames = list(row=NULL,col=metabolites(reactionList)))
for (reaction in 1:length(reactionList)){
r_met <- .get.right(reactionList[reaction])
r_coe <- .coefficients(r_met)
p_met <- .get.left(reactionList[reaction])
p_coe <- .coefficients(p_met)
s[reaction,metabolites(r_met)] <- -1*(r_coe)
s[reaction,metabolites(p_met)] <- p_coe
}
View(s)
solve(s,c(1,1))
s
as.matrix(s)
s <- matrix(0,nrow = length(reactionList),ncol=length(metabolites(reactionList)),dimnames = list(reactions=NULL,metabolites=metabolites(reactionList)))
for (reaction in 1:length(reactionList)){
r_met <- .get.right(reactionList[reaction])
r_coe <- .coefficients(r_met)
p_met <- .get.left(reactionList[reaction])
p_coe <- .coefficients(p_met)
s[reaction,metabolites(r_met)] <- -1*(r_coe)
s[reaction,metabolites(p_met)] <- p_coe
}
s
View(s)
stoichiometric <- function(reactionList){
mets<- metabolites(reactionList)
s <- matrix(0,nrow = length(reactionList),ncol=length(mets),dimnames = list(reactions=NULL,metabolites=mets))
for (reaction in 1:length(reactionList)){
r_met <- .get.right(reactionList[reaction])
r_coe <- .coefficients(r_met)
p_met <- .get.left(reactionList[reaction])
p_coe <- .coefficients(p_met)
s[reaction,metabolites(r_met)] <- -1*(r_coe)
s[reaction,metabolites(p_met)] <- p_coe
}
return(s)
}
stoichiometric("A + B => C")
stoichiometric("A + B => C + B")
reactionList <- glugln[1]
reaction<-1
r_met <- .get.right(reactionList[reaction])
r_coe <- .coefficients(r_met)
p_met <- .get.left(reactionList[reaction])
p_coe <- .coefficients(p_met)
r_met <- metabolites(r_met)
p_met <- metabolites(p_met)
r_met
p_met
r_met[r_met%in%p_met]
r_met[!r_met%in%p_met]
stoichiometric <- function(reactionList){
mets<- metabolites(reactionList)
s <- matrix(0,nrow = length(reactionList),ncol=length(mets),dimnames = list(reactions=NULL,metabolites=mets))
for (reaction in 1:length(reactionList)){
r_met <- .get.right(reactionList[reaction])
r_coe <- .coefficients(r_met)
p_met <- .get.left(reactionList[reaction])
p_coe <- .coefficients(p_met)
r_met <- metabolites(r_met)
p_met <- metabolites(p_met)
s[reaction,r_met[!r_met%in%p_met]] <- -1*(r_coe[!r_met%in%p_met])
s[reaction,p_met[!p_met%in%r_met]] <- p_coe[!r_met%in%p_met]
}
return(s)
}
stoichiometric("A + B => C + B")
stoichiometric("A + B => C")
stoichiometric("A + B => C")
reactionList <- "A + B => C"
mets<- metabolites(reactionList)
mets
s <- matrix(0,nrow = length(reactionList),ncol=length(mets),dimnames = list(reactions=NULL,metabolites=mets))
s
r_met <- .get.right(reactionList[reaction])
r_coe <- .coefficients(r_met)
p_met <- .get.left(reactionList[reaction])
p_coe <- .coefficients(p_met)
r_met
p_met
r_coe
p_coe
r_met <- metabolites(r_met)
p_met <- metabolites(p_met)
r_met
r_met%in%p_met
[!r_met%in%p_met]
r_met[!r_met%in%p_met]
r_coe[!r_met%in%p_met]
stoichiometric <- function(reactionList){
mets<- metabolites(reactionList)
s <- matrix(0,nrow = length(reactionList),ncol=length(mets),dimnames = list(reactions=NULL,metabolites=mets))
for (reaction in 1:length(reactionList)){
r_met <- .get.right(reactionList[reaction])
r_coe <- .coefficients(r_met)
p_met <- .get.left(reactionList[reaction])
p_coe <- .coefficients(p_met)
r_met <- metabolites(r_met)
p_met <- metabolites(p_met)
s[reaction,r_met[!r_met%in%p_met]] <- -1*(r_coe[!r_met%in%p_met])
s[reaction,p_met[!p_met%in%r_met]] <- p_coe[!p_met%in%r_met]
}
return(s)
}
stoichiometric("A + B => C")
stoichiometric("A + B => C + D")
stoichiometric("A + B => C + -2 D")
stoichiometric("A + B => C -2 D")
stoichiometric("A + B => C + 2 D")
library(convert2sybil)
convert2sybil(reactions = "A + B => C + B",file = "BALANCED")
library(sybil)
model <-readTSVmod(prefix = "BALANCED",quoteChar = "\"")
model@S
Solve(S,c(1000,1000))
Solve(s,c(1000,1000))
Solve(s,c(-1000,1000))
Solve(s
)
stoichiometric <- function(reactionList){
mets<- metabolites(reactionList)
s <- matrix(0,nrow = length(reactionList),ncol=length(mets),dimnames = list(reactions=NULL,metabolites=mets))
for (reaction in 1:length(reactionList)){
r_met <- .get.right(reactionList[reaction])
r_coe <- .coefficients(r_met)
p_met <- .get.left(reactionList[reaction])
p_coe <- .coefficients(p_met)
r_met <- metabolites(r_met)
p_met <- metabolites(p_met)
s[reaction,r_met[!r_met%in%p_met]] <- -1*(r_coe[!r_met%in%p_met])
s[reaction,p_met[!p_met%in%r_met]] <- p_coe[!p_met%in%r_met]
}
return(s)
}
stoichiometric("A + B => C")
stoichiometric("A + B <=> C")
t(stoichiometric("A + B <=> C"))
stoichiometric(glugln)
as.matrix(stoichiometric(glugln),dimnames=NULL)
m <-as.matrix(stoichiometric(glugln),dimnames=NULL)
View(m)
m <-as.matrix(stoichiometric(glugln),colnames=NULL)
View(m)
m <-as.matrix(stoichiometric(glugln),names=NULL)
View(m)
Glycolysis <- read.csv("~/Dropbox/Glycolysis.tsv", header=FALSE, sep=";")
View(Glycolysis)
s <- stoichiometric(Glycolysis$V1)
s <- stoichiometric(as.vector(Glycolysis$V1))
Glycolysis <- read.delim("~/Dropbox/Glycolysis.tsv", header=FALSE, comment.char="#", stringsAsFactors=FALSE)
View(Glycolysis)
s <- stoichiometric(as.vector(Glycolysis$V1))
s
s <- stoichiometric(as.vector(Glycolysis$V1))
t(s)
rowsum(t(s))
rowsum(t(s)group = 1)
?rowsum
rowSums(t(s))
t(rowSums(t(s)))
cbind(rowSums(t(s)))
?E_coli
E_coli$B
A <- E_coli$A
View(A)
length(E_coli$B)
length(E_coli$G)
length(E_coli$H)
?lsei
lsei(E_coli$A,E_coli$B)
Solve(E_coli$A,E_coli$B)
Solve(A = E_coli$A,B = E_coli$B)
lsei(E = E_coli$A,F = E_coli$B)
E_coli$G
?lsei
G <- E_coli$G
View(G)
View(A)
A[29,]
E_coli$H
View(G)
View(A)
View(G)
View(A)
G[29,]
A[29,]
x <- 1:5
y <- c(9, 8, 6, 7, 5)
plot(x, y, main = "Polynomial fitting, using lsei", cex = 1.5,
pch = 16, ylim = c(4, 10))
A <- cbind(rep(1, 5), x)
B <- y
cf <- lsei(A, B)$X
abline(coef = cf)
A <- cbind(A, x^2)
cf <- lsei(A, B)$X
curve(cf[1] + cf[2]*x + cf[3]*x^2, add = TRUE, lty = 2)
A <- matrix(nrow = 4, ncol = 3,
data = c(3, 1, 2, 0, 2, 0, 0, 1, 1, 0, 2, 0))
A
B <- c(2, 1, 8, 3)
F <- 3
E <- c(0, 1, 0)
E
lsei(E = E, F = F, A = A, B = B, G = G, H = H)
H <- c(-3, 2)
lsei(E = E, F = F, A = A, B = B, G = G, H = H)
G <- matrix(nrow = 2, ncol = 3, byrow = TRUE,
data = c(-1, 2, 0, 1, 0, -1))
lsei(E = E, F = F, A = A, B = B, G = G, H = H)
A
B
lsei(A,B)
View(A)
A<-E_coli$A
View(A)
stoichiometric <- function(reactionList){
mets<- metabolites(reactionList)
s <- matrix(0,ncol = length(reactionList),nrow=length(mets),dimnames = list(metabolites=mets,reactions=NULL))
for (reaction in 1:length(reactionList)){
r_met <- .get.right(reactionList[reaction])
r_coe <- .coefficients(r_met)
p_met <- .get.left(reactionList[reaction])
p_coe <- .coefficients(p_met)
r_met <- metabolites(r_met)
p_met <- metabolites(p_met)
s[r_met[!r_met%in%p_met],reaction] <- -1*(r_coe[!r_met%in%p_met])
s[p_met[!p_met%in%r_met],reaction] <- p_coe[!p_met%in%r_met]
}
return(t(s))
}
stoichiometric(glugln)
g <- stoichiometric(glugln)
View(g)
stoichiometric <- function(reactionList){
mets<- metabolites(reactionList)
s <- matrix(0,nrow = length(reactionList),ncol=length(mets),dimnames = list(reactions=NULL,metabolites=mets))
for (reaction in 1:length(reactionList)){
r_met <- .get.right(reactionList[reaction])
r_coe <- .coefficients(r_met)
p_met <- .get.left(reactionList[reaction])
p_coe <- .coefficients(p_met)
r_met <- metabolites(r_met)
p_met <- metabolites(p_met)
s[reaction,r_met[!r_met%in%p_met]] <- -1*(r_coe[!r_met%in%p_met]
s[reaction,p_met[!p_met%in%r_met]] <- p_coe[!p_met%in%r_met]
}
return(s)
}
stoichiometric <- function(reactionList){
mets<- metabolites(reactionList)
s <- matrix(0,nrow = length(reactionList),ncol=length(mets),dimnames = list(reactions=NULL,metabolites=mets))
for (reaction in 1:length(reactionList)){
r_met <- .get.right(reactionList[reaction])
r_coe <- .coefficients(r_met)
p_met <- .get.left(reactionList[reaction])
p_coe <- .coefficients(p_met)
r_met <- metabolites(r_met)
p_met <- metabolites(p_met)
s[reaction,r_met[!r_met%in%p_met]] <- -1*(r_coe[!r_met%in%p_met])
s[reaction,p_met[!p_met%in%r_met]] <- p_coe[!p_met%in%r_met]
}
return(s)
}
g <- stoichiometric(glugln)
View(g)
stoichiometric <- function(reactionList){
mets<- metabolites(reactionList)
s <- matrix(0,nrow = length(reactionList),ncol=length(mets),dimnames = list(reactions=NULL,metabolites=mets))
for (reaction in 1:length(reactionList)){
r_met <- .get.right(reactionList[reaction])
r_coe <- .coefficients(r_met)
p_met <- .get.left(reactionList[reaction])
p_coe <- .coefficients(p_met)
r_met <- metabolites(r_met)
p_met <- metabolites(p_met)
s[reaction,r_met[!r_met%in%p_met]] <- -1*(r_coe[!r_met%in%p_met])
s[reaction,p_met[!p_met%in%r_met]] <- p_coe[!p_met%in%r_met]
}
return(t(s))
}
g <- stoichiometric(glugln)
View(g)
colSums(g)
colSums(g)<0
metabolites(glugln)[colSums(g)<0]
Glycolysis$V1
stoichiometric(Glycolysis$V1)
s <- stoichiometric(Glycolysis$V1)
colSums(s)
rowSums(s)
metabolites(Glycolysis$V1)[rowSums(s)<0]
orphan.reactants(Glycolysis$V1)
metabolites(Glycolysis$V1)[rowSums(s)>0]
stoichiometric(glugln[1:15])
stoichiometric(glugln[1:20])
stoichiometric(glugln[1:30])
stoichiometric(glugln)
stoichiometric(c("2 A + B -> 3 C","B + 3 D -> 4"))
stoichiometric(c("2 A + B => 3 C","B + 3 D => 4"))
stoichiometric(c("2 A + B => 3 C","B + 3 D => 4 A"))
stoichiometric.matrix <- function(reactionList){
mets<- metabolites(reactionList)
s <- matrix(0,nrow = length(reactionList),ncol=length(mets),dimnames = list(reactions=NULL,metabolites=mets))
for (reaction in 1:length(reactionList)){
r_met <- .get.right(reactionList[reaction])
r_coe <- .coefficients(r_met)
p_met <- .get.left(reactionList[reaction])
p_coe <- .coefficients(p_met)
r_met <- metabolites(r_met)
p_met <- metabolites(p_met)
s[reaction,r_met[!r_met%in%p_met]] <- -1*(r_coe[!r_met%in%p_met])
s[reaction,p_met[!p_met%in%r_met]] <- p_coe[!p_met%in%r_met]
}
return(t(s))
}
system.time(stoichiometric.matrix(glugln))
setwd("~/Documents/minval/R")
?make.names
make.names(c("", "X"), unique = TRUE)
make.names(c("", "X"), unique = TRUE,names = "X.")
make.names(c("", "X"), unique = TRUE)
paste0("R",1:10)
stoichiometric.matrix <- function(reactionList){
mets<- metabolites(reactionList)
s <- matrix(0,nrow = length(reactionList),ncol=length(mets),dimnames = list(reactions=paste0("R",1:lengths(met)),metabolites=mets))
for (reaction in 1:length(reactionList)){
r_met <- .get.right(reactionList[reaction])
r_coe <- .coefficients(r_met)
p_met <- .get.left(reactionList[reaction])
p_coe <- .coefficients(p_met)
r_met <- metabolites(r_met)
p_met <- metabolites(p_met)
s[reaction,r_met[!r_met%in%p_met]] <- -1*(r_coe[!r_met%in%p_met])
s[reaction,p_met[!p_met%in%r_met]] <- p_coe[!p_met%in%r_met]
}
return(t(s))
}
stoichiometric.matrix(glugln)
stoichiometric.matrix(glugln)
stoichiometric.matrix <- function(reactionList){
mets<- metabolites(reactionList)
s <- matrix(0,nrow = length(reactionList),ncol=length(mets),dimnames = list(reactions=paste0("R",1:lengths(mets)),metabolites=mets))
for (reaction in 1:length(reactionList)){
r_met <- .get.right(reactionList[reaction])
r_coe <- .coefficients(r_met)
p_met <- .get.left(reactionList[reaction])
p_coe <- .coefficients(p_met)
r_met <- metabolites(r_met)
p_met <- metabolites(p_met)
s[reaction,r_met[!r_met%in%p_met]] <- -1*(r_coe[!r_met%in%p_met])
s[reaction,p_met[!p_met%in%r_met]] <- p_coe[!p_met%in%r_met]
}
return(t(s))
}
stoichiometric.matrix(glugln)
reactionList <- glugln
mets<- metabolites(reactionList)
s <- matrix(0,nrow = length(reactionList),ncol=length(mets),dimnames = list(reactions=paste0("R",1:lengths(mets)),metabolites=mets))
s <- matrix(0,nrow = length(reactionList),ncol=length(mets),dimnames = list(reactions=paste0("R",1:length(reactionList)),metabolites=mets))
s
stoichiometric.matrix <- function(reactionList){
mets<- metabolites(reactionList)
s <- matrix(0,nrow = length(reactionList),ncol=length(mets),dimnames = list(reactions=paste0("R",1:length(reactionList)),metabolites=mets))
for (reaction in 1:length(reactionList)){
r_met <- .get.right(reactionList[reaction])
r_coe <- .coefficients(r_met)
p_met <- .get.left(reactionList[reaction])
p_coe <- .coefficients(p_met)
r_met <- metabolites(r_met)
p_met <- metabolites(p_met)
s[reaction,r_met[!r_met%in%p_met]] <- -1*(r_coe[!r_met%in%p_met])
s[reaction,p_met[!p_met%in%r_met]] <- p_coe[!p_met%in%r_met]
}
return(t(s))
}
stoichiometric.matrix(glugln)
formatC(1)
formatC(1,digits = 3)
xx  <- pi * 10^(-5:4)
cbind(format(xx, digits = 4), formatC(xx))
cbind(formatC(xx, width = 9, flag = "-"))
cbind(formatC(xx, digits = 5, width = 8, format = "f", flag = "0"))
cbind(format(xx, digits = 4), formatC(xx, digits = 4, format = "fg"))
formatC(1,digits = 3,format = "i")
formatC(1,digits = 3,format = "e")
formatC(1,digits = 3,format = "s")
formatC(1,digits = 3,flag = 0)
1/10
10/10
nchar(10)
length(reactionList)
nchar(length(reactionList))
formatC(1:length(reactionList),digits = nchar(length(reactionList)),flag = 0)
stoichiometric.matrix <- function(reactionList){
mets<- metabolites(reactionList)
s <- matrix(0,nrow = length(reactionList),ncol=length(mets),dimnames = list(reactions=paste0("R",formatC(1:length(reactionList),digits = nchar(length(reactionList)),flag = 0)),metabolites=mets))
for (reaction in 1:length(reactionList)){
r_met <- .get.right(reactionList[reaction])
r_coe <- .coefficients(r_met)
p_met <- .get.left(reactionList[reaction])
p_coe <- .coefficients(p_met)
r_met <- metabolites(r_met)
p_met <- metabolites(p_met)
s[reaction,r_met[!r_met%in%p_met]] <- -1*(r_coe[!r_met%in%p_met])
s[reaction,p_met[!p_met%in%r_met]] <- p_coe[!p_met%in%r_met]
}
return(t(s))
}
stoichiometric("A + B => C")
stoichiometric.matrix <- function(reactionList){
mets<- metabolites(reactionList)
s <- matrix(0,nrow = length(reactionList),ncol=length(mets),dimnames = list(reactions=paste0("R",formatC(1:length(reactionList),digits = nchar(length(reactionList)),flag = 0)),metabolites=mets))
for (reaction in 1:length(reactionList)){
r_met <- .get.right(reactionList[reaction])
r_coe <- .coefficients(r_met)
p_met <- .get.left(reactionList[reaction])
p_coe <- .coefficients(p_met)
r_met <- metabolites(r_met)
p_met <- metabolites(p_met)
s[reaction,r_met[!r_met%in%p_met]] <- -1*(r_coe[!r_met%in%p_met])
s[reaction,p_met[!p_met%in%r_met]] <- p_coe[!p_met%in%r_met]
}
return(t(s))
}
stoichiometric.matrix("A + B => C")
reactionList<-"A + B => C"
formatC(1:length(reactionList),digits = nchar(length(reactionList)),flag = 0)
nchar(length(reactionList)
)
formatC(1:length(reactionList),digits = nchar(length(reactionList)),flag = 0)
formatC(1:length(reactionList),digits = nchar(length(reactionList)-1),flag = 0)
formatC(1:length(reactionList),digits = (nchar(length(reactionList)-1)),flag = 0)
stoichiometric.matrix <- function(reactionList){
mets<- metabolites(reactionList)
s <- matrix(0,nrow = length(reactionList),ncol=length(mets),dimnames = list(reactions=paste0("R",formatC(1:length(reactionList),digits = nchar(length(reactionList)),flag = 0)),metabolites=mets))
for (reaction in 1:length(reactionList)){
r_met <- .get.right(reactionList[reaction])
r_coe <- .coefficients(r_met)
p_met <- .get.left(reactionList[reaction])
p_coe <- .coefficients(p_met)
r_met <- metabolites(r_met)
p_met <- metabolites(p_met)
s[reaction,r_met[!r_met%in%p_met]] <- -1*(r_coe[!r_met%in%p_met])
s[reaction,p_met[!p_met%in%r_met]] <- p_coe[!p_met%in%r_met]
}
return(t(s))
}
stoichiometric.matrix("A + B => C + D")
stoichiometric.matrix(rep("A + B => C + D",10))
stoichiometric.matrix <- function(reactionList){
mets<- metabolites(reactionList)
s <- matrix(0,nrow = length(reactionList),ncol=length(mets),dimnames = list(reactions=paste0("R",formatC(1:length(reactionList),digits = (nchar(length(reactionList))-1),flag = 0)),metabolites=mets))
for (reaction in 1:length(reactionList)){
r_met <- .get.right(reactionList[reaction])
r_coe <- .coefficients(r_met)
p_met <- .get.left(reactionList[reaction])
p_coe <- .coefficients(p_met)
r_met <- metabolites(r_met)
p_met <- metabolites(p_met)
s[reaction,r_met[!r_met%in%p_met]] <- -1*(r_coe[!r_met%in%p_met])
s[reaction,p_met[!p_met%in%r_met]] <- p_coe[!p_met%in%r_met]
}
return(t(s))
}
stoichiometric.matrix(rep("A + B => C + D",10))
stoichiometric.matrix(rep("A + B => C + D",50))
stoichiometric.matrix(glugln
)
s<-stoichiometric.matrix(glugln)
View(s)
